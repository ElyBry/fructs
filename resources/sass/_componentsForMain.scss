// стили для каждого компонента необходимого для этого проекта, включая кнопки, модальные окна и т.д.
@import "app";
#root {
    justify-content: flex-start;
    height: 100%;
}
#body {
    width: 100%;
    height: 100%;
}
#target {
    width: 100%;
    height: 100vh;
}
#bgTarget {
    background-image: url("../../public/image/background-images/fruitsWwhitebg.jpg");
    background-size: cover;
    background-attachment: fixed;
    width: 100vw;
    height: 100vh;
    position: absolute;
}
#bgTargetS {
    background-image: url("../../public/image/background-images/green-apple.png");
    background-size: contain;
    background-repeat: no-repeat;
    z-index: 1;
    position: absolute;
    top: 10%;
    width: 20vw;
    height: 20vw;
}
#targetBlock {
    position: relative;
}
#stats {
    height: 60vh;
    background-color: $third-color;
}
#statsBlock {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
}
.statsText img{
    width: 155px;
}
#guaranteeBlock {
    h1 {
        text-align: center;
    }
    .guarantees {
        position: relative;
        width: auto;
    }
    .slider {
    }
    .slider-content {
        display: flex;
        gap: 105px;
    }
    .imgGuarantee img{
        width: 100%;
    }
    .guaranteeText {
        min-width: 80%;
        display: flex;
        border-radius: 5px;
        padding: 25px;
        box-shadow: 2px 2px 10px 0 rgba(#333, 0.2);
        h2 {
            text-align: center;
        }
    }
}
.superiorityText{
    h2 {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: $padding-elements;
        border-radius: 30px;
        background-color: $primary-color;
        span {
            display: flex;
            padding: $padding-elements;
            border-radius: 50%;
            width: $padding-elements;
            height: $padding-elements;
            background-color: $secondary-color;
            flex-direction: row;
            justify-content: center;
            align-items: center;
        }
    }
}

#faqBlock {
    .questAnswerFaq {
        display: flex;
        flex-direction: column;
        cursor: pointer;
        margin: $margin-text 0;
        border-bottom: 1px solid $note-color;
        &.open {
            .answerFaq {
                line-height: $line-height-base;
            }
            .icon-plus {
                transform: rotate(45deg);
            }
        }
        &:hover {
            .icon-plus {
                background-color: $primary-color;
                color: white;
            }

        }
        .answerFaq {
            overflow: hidden;
            line-height: 0;
            transition: $transition-base;
            margin-block-start: 0.5lh;
        }
        .headFaq {
            display: flex;
            flex-direction: row-reverse;
            justify-content: space-between;
            align-items: center;
        }
        .questFaq {
            margin: $margin-text 0;
            font-weight: $font-weight-bold;
        }
        .icon-plus {
            display: flex;
            width: $width-icon;
            height: $width-icon;
            align-items: center;
            justify-content: center;
            background-color: white;
            border-radius: 50%;
            border: 1px solid $secondary-color;
            transition: $transition-base;
        }
    }
}
