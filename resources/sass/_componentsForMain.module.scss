// стили для каждого компонента необходимого для этого проекта, включая кнопки, модальные окна и т.д.
@use "var";
@use "app";
@use "mixin";
.root {
    justify-content: flex-start;
    height: 100%;
}
.content {
    @include mixin.content;
}
.body {
    width: 100%;
    height: 100%;
}
.target {
    width: 100%;
    height: 100vh;
}
.bgTarget {
    background-image: url("../../public/image/background-images/fruitsWwhitebg.jpg");
    background-size: cover;
    background-attachment: fixed;
    width: 100vw;
    height: 100vh;
    position: absolute;
}
.bgTargetS {
    background-image: url("../../public/image/background-images/green-apple.png");
    background-size: contain;
    background-repeat: no-repeat;
    z-index: 1;
    position: absolute;
    top: 10%;
    width: 20vw;
    height: 20vw;
}
.targetBlock {
    position: relative;
    margin-top: 50vh;
}
.stats {
    height: 60vh;
    background-color: var.$third-color;
    z-index: 1;
}
.statsBlock {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10vw;
    width: 100%;
    height: 100%;
}
.statsText {
    text-align: center;
    img {
        width: 155px;
    }
}
.guaranteeBlock {
    h1 {
        text-align: center;
        margin-bottom: var.$margin-h1;
    }
    .guarantees {
        position: relative;
        width: auto;
    }
    .sliderContent {
        display: flex;
        gap: 105px;
        transform: translateX(20%);
    }
    .imgGuarantee {
        img{
            width: 100%;
            height: 100%;
            object-fit: cover;
            box-shadow: 2px 2px 15px 0 var.$secondary-color;
        }
    }
    .guaranteeText {
        min-width: 60%;
        height: 80vh;
        border-radius: 0 var.$border-radius var.$border-radius 0;
        display: grid;
        grid-template-columns: 50% 50%;
        box-shadow: 2px 2px 10px 0 var.$primary-color;
        h2 {
            text-align: center;
        }
        h3 {
            margin-top: var.$margin-text;
            padding: var.$padding-elements;
        }
    }
}
.superiorityText{
    h2 {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: var.$padding-elements;
        border-radius: 30px;
        background-color: var.$primary-color;
        span {
            display: flex;
            padding: var.$padding-elements;
            border-radius: 50%;
            width: var.$padding-elements;
            height: var.$padding-elements;
            background-color: var.$secondary-color;
            flex-direction: row;
            justify-content: center;
            align-items: center;
        }
    }
}

.faqBlock {
    .questAnswerFaq {
        display: flex;
        flex-direction: column;
        cursor: pointer;
        margin: var.$margin-text 0;
        border-bottom: 1px solid var.$note-color;
        &.open {
            .answerFaq {
                line-height: var.$line-height-base;
            }
            .iconPlus {
                transform: rotate(45deg);
            }
        }
        &:hover {
            .iconPlus {
                background-color: var.$primary-color;
                color: white;
            }

        }
        .answerFaq {
            overflow: hidden;
            line-height: 0;
            transition: var.$transition-base;
            margin-block-start: 0.5lh;
        }
        .headFaq {
            display: flex;
            flex-direction: row-reverse;
            justify-content: space-between;
            align-items: center;
        }
        .questFaq {
            margin: var.$margin-text 0;
            font-weight: var.$font-weight-bold;
        }
        .iconPlus {
            display: flex;
            width: var.$width-icon;
            height: var.$width-icon;
            align-items: center;
            justify-content: center;
            background-color: white;
            border-radius: 50%;
            border: 1px solid var.$secondary-color;
            transition: var.$transition-base;
        }
    }
}
.bestBlock {
    background-image: url("../../public/image/background-images/fruits-falling-realistic-composition.png");
    background-size: cover;
    background-attachment: fixed;
    height: 100vh;
    width: 100%;
    .content {
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

.workBlock {

    .work {
        .workImg {

        }
        .workText {

        }
    }
}

.cartBlock {
    position: relative;
    .fruit {
        width: 10vw;
        position: absolute;
    }
    .cart {
        width: 60vw;
    }
    button {
        display: none;
    }
}
